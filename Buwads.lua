
-- Configuration
local DEFEND_DISTANCE = 6 -- Adjust this distance to determine how close the defender should be to the player
local DEFEND_SPEED = 30 -- Adjust this speed to determine how fast the defender moves
local ORBIT_SPEED = 5 -- Adjust this speed to determine how fast the character orbits around the player
local JUMP_INTERVAL = 0.1 -- Adjust this interval to determine how often the character jumps
local JUMP_HEIGHT = 30 -- Adjust this height to determine how high the character jumps

-- Function to find the closest player
local function findClosestPlayer()
    local closestPlayer = nil
    local minDistance = math.huge
    
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player ~= game.Players.LocalPlayer then
            local distance = (player.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude
            if distance < minDistance then
                closestPlayer = player
                minDistance = distance
            end
        end
    end
    
    return closestPlayer
end

-- Function to calculate orbit position
local function calculateOrbitPosition(playerPosition, orbitDistance, angle)
    local orbitOffset = Vector3.new(orbitDistance * math.cos(angle), 0, orbitDistance * math.sin(angle))
    return playerPosition + orbitOffset
end

-- Main function to defend the closest player, orbit around them, and jump periodically
local function defendOrbitAndJump()
    local closestPlayer = findClosestPlayer()
    if closestPlayer then
        local targetPosition = closestPlayer.Character.HumanoidRootPart.Position
        local currentPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
        local direction = (targetPosition - currentPosition).unit
        
        -- Check if the player is moving
        local isMoving = game.Players.LocalPlayer.Character.Humanoid.MoveDirection.magnitude > 0
        
        if not isMoving then
            -- Rotate the character to face the target player
            local lookVector = targetPosition - currentPosition
            lookVector = Vector3.new(lookVector.x, 0, lookVector.z) -- Only consider the horizontal direction
            if lookVector.magnitude > 0 then
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(currentPosition, currentPosition + lookVector))
            end
            
            -- Move towards the closest player
            game.Players.LocalPlayer.Character.Humanoid:Move(direction * DEFEND_SPEED)
            
            -- Calculate orbit position
            local orbitDistance = (targetPosition - currentPosition).magnitude - DEFEND_DISTANCE
            local angle = math.rad(tick() * ORBIT_SPEED * 360)
            local orbitPosition = calculateOrbitPosition(targetPosition, orbitDistance, angle)
            
            -- Move the character to orbit around the closest player
            game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(orbitPosition))
            
            -- Jump periodically
            if tick() % JUMP_INTERVAL < 0.1 then
                game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, JUMP_HEIGHT, 0)
            end
        end
    end
end

-- Connect the function to a loop for continuous checking
while true do
    defendOrbitAndJump()
    wait(0.1) -- Adjust the wait time as needed for performance
end
